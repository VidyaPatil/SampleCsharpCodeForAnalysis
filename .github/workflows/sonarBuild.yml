name: Sonar server Build yml & Upload Results

on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]
  schedule:
    - cron: '27 14 * * 6'

jobs:
  build:
    name: Build
    runs-on: [self-hosted, sonarqube]
    permissions: read-all

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1
      - name: Build and analyze
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"Samplecheck-vidya" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
          dotnet build D:\actions-runner-vidya\_work\SampleCsharpCodeForAnalysis\SampleCsharpCodeForAnalysis\SampleCodeAnalyzerProject2.sln
          $sonarqube_results = .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
       # Uploads results.sarif to GitHub repository using the upload-sarif action
      - name: Append SonarQube results to code scanning alerts
        run: |
         # Read the SonarQube results from the SARIF file
         $sonarqube_results_content = Get-Content -Raw -Path results.sarif
         
         # Create or update code scanning alerts using GitHub API
         $github_token = "${{ secrets.GITHUB_TOKEN }}"
         $repo_owner = $env:GITHUB_REPOSITORY -split '/' | select -First 1
         $repo_name = $env:GITHUB_REPOSITORY -split '/' | select -Last 1
         $github_api_url = "https://api.github.com/repos/$repo_owner/$repo_name/code-scanning/alerts"
         
         $alert_payload = @{
           title = "SonarQube Vulnerabilities"
           body = $sonarqube_results_content
         } | ConvertTo-Json
         
         Invoke-RestMethod -Uri $github_api_url -Method Post -Headers @{Authorization = "Bearer $github_token"; Accept = "application/vnd.github.v3+json"} -Body $alert_payload
